{"version":3,"file":"static/js/281.3e695303.chunk.js","mappings":"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","sources":["components/Snack/Snack.js","components/RegisterForm/RegisterForm.js","pages/RegisterPage.js","utils/Button.jsx","utils/Container.jsx"],"sourcesContent":["import { Snackbar, Alert } from '@mui/material';\n\nexport const Snack = ({\n  isOpen = true,\n  handleClose,\n  text,\n  position = { vertical: 'bottom', horizontal: 'center' },\n  type,\n}) => {\n  return (\n    <Snackbar\n      open={isOpen}\n      onClose={handleClose}\n      autoHideDuration={3000}\n      anchorOrigin={position}\n    >\n      <Alert onClose={handleClose} severity={type}>\n        {text}\n      </Alert>\n    </Snackbar>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom/dist';\nimport authOperations from 'redux/auth/authOperations';\nimport authSelectors from 'redux/auth/authSelectors';\n\nimport { Snack } from 'components/Snack/Snack';\n\nimport {\n  Container,\n  Typography,\n  Box,\n  Grid,\n  Link,\n  Checkbox,\n  FormControlLabel,\n  CssBaseline,\n  TextField,\n  CircularProgress,\n} from '@mui/material';\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { useState } from 'react';\nimport { Button } from 'utils/Button';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [brokenTextField, setBrokenTextField] = useState(false);\n\n  const isError = useSelector(authSelectors.selectError);\n\n  const isLoading = useSelector(authSelectors.selectIsLoading);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const formData = {\n      name: form.elements.name.value,\n      email: form.elements.email.value,\n      password: form.elements.password.value,\n    };\n\n    if (!formData.name || !formData.email || !formData.password) {\n      setBrokenTextField(true);\n      return;\n    }\n\n    dispatch(authOperations.register(formData));\n\n    form.reset();\n  };\n\n  const handleNavigateToLogin = () => {\n    navigate('/login');\n  };\n\n  return (\n    <>\n      {brokenTextField && (\n        <Snack type=\"error\" text=\"Fill in all fields, please\" />\n      )}\n\n      {isError && <Snack type=\"error\" text=\"Something went wrong :(\" />}\n\n      {isLoading ? (\n        <Box sx={{ width: '100vw', height: '100vh', position: 'relative' }}>\n          <CircularProgress\n            sx={{\n              position: 'absolute',\n              top: '40%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n            }}\n          />\n        </Box>\n      ) : (\n        <Container component=\"main\" maxWidth=\"xs\" sx={{ pb: 4 }}>\n          <CssBaseline />\n          <Box\n            sx={{\n              marginTop: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign up\n            </Typography>\n            <Box\n              component=\"form\"\n              noValidate\n              onSubmit={handleSubmit}\n              sx={{ mt: 3 }}\n            >\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"name\"\n                    label=\"User name\"\n                    name=\"name\"\n                    autoFocus\n                    autoComplete=\"off\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    control={\n                      <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\n                    }\n                    label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Sign Up\n              </Button>\n              <Grid container justifyContent=\"flex-end\">\n                <Grid item>\n                  <Link\n                    variant=\"body2\"\n                    onClick={handleNavigateToLogin}\n                    href=\"#\"\n                  >\n                    Already have an account? Sign in\n                  </Link>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </Container>\n      )}\n    </>\n  );\n};\n","import { Container } from 'utils/Container';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function RegisterPage() {\n  return (\n    <Container>\n      <RegisterForm />\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  width: 100%;\n  cursor: pointer;\n  padding: 10px 30px;\n  background: #f8a035;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  transition: 250ms;\n  margin: 20px 0;\n  &:hover {\n    background: #dd7f0c;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  min-height: calc(100vh - 160px);\n  display: flex;\n  padding: 20px 30px;\n  background-color: #f3f3f3;\n  color: #333;\n  &:link {\n    text-decoration: none;\n  }\n`;\n"],"names":["Snack","isOpen","handleClose","text","position","vertical","horizontal","type","open","onClose","autoHideDuration","anchorOrigin","severity","RegisterForm","dispatch","useDispatch","navigate","useNavigate","useState","brokenTextField","setBrokenTextField","isError","useSelector","authSelectors","isLoading","Box","sx","width","height","CircularProgress","top","left","transform","component","maxWidth","pb","CssBaseline","marginTop","display","flexDirection","alignItems","Typography","variant","noValidate","onSubmit","e","preventDefault","form","currentTarget","formData","name","elements","value","email","password","authOperations","reset","mt","Grid","container","spacing","item","xs","TextField","margin","required","fullWidth","id","label","autoFocus","autoComplete","FormControlLabel","control","Checkbox","color","Button","mb","justifyContent","Link","onClick","href","RegisterPage","Container","styled"],"sourceRoot":""}