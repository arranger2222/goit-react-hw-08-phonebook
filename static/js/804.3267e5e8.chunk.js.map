{"version":3,"file":"static/js/804.3267e5e8.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.js","components/Snack/Snack.js","utils/Container.jsx","utils/Section.jsx","pages/HomePage.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  float: left;\n  margin-right: 30px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin: 0 0 15px 0;\n  padding: 10px;\n  width: 250px;\n  border: 1px solid #ccc;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  padding: 10px 30px;\n  background: #f8a035;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  transition: 250ms;\n  &:hover {\n    background: #dd7f0c;\n  }\n`;\n\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  FormStyled,\n  Label,\n  Input,\n  Button,\n} from 'components/ContactForm/ContactForm.styled';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\nimport { Snack } from 'components/Snack/Snack';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const [isSnackOpen, setIsSnackOpen] = useState(false);\n\n  const isContactInList = contactName => {\n    const lowercaseName = contactName.toLowerCase();\n    return contacts.find(({ name }) =>\n      name.toLowerCase().includes(lowercaseName)\n    );\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    if (isContactInList(name)) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    const contactItem = {\n      name,\n      number,\n    };\n\n    dispatch(addContact(contactItem));\n\n    setIsSnackOpen(true);\n\n    reset();\n  };\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        throw new Error('Not supported type');\n    }\n  };\n\n  function reset() {\n    setName('');\n    setNumber('');\n  }\n\n  return (\n    <>\n      {isSnackOpen && (\n        <Snack\n          isOpen={isSnackOpen}\n          handleClose={() => {\n            setIsSnackOpen(false);\n          }}\n          text=\"Contact created\"\n          type=\"success\"\n        />\n      )}\n      <FormStyled onSubmit={handleFormSubmit}>\n        <Label>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleInputChange}\n            placeholder=\"Name\"\n            autoComplete=\"off\"\n          />\n        </Label>\n        <Label>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleInputChange}\n            placeholder=\"Number\"\n            autoComplete=\"off\"\n          />\n        </Label>\n        <Button title=\"add contact\" type=\"submit\">\n          Add contact\n        </Button>\n      </FormStyled>\n    </>\n  );\n};\n\nexport const ContactFormDisabled = () => {\n  return (\n    <>\n      <FormStyled>\n        <Label>\n          <Input placeholder=\"Name\" autoComplete=\"off\" disabled />\n        </Label>\n        <Label>\n          <Input placeholder=\"Number\" autoComplete=\"off\" disabled />\n        </Label>\n      </FormStyled>\n    </>\n  );\n};\n","import { Snackbar, Alert } from '@mui/material';\n\nexport const Snack = ({\n  isOpen = true,\n  handleClose,\n  text,\n  position = { vertical: 'bottom', horizontal: 'center' },\n  type,\n}) => {\n  return (\n    <Snackbar\n      open={isOpen}\n      onClose={handleClose}\n      autoHideDuration={3000}\n      anchorOrigin={position}\n    >\n      <Alert onClose={handleClose} severity={type}>\n        {text}\n      </Alert>\n    </Snackbar>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 100vh;\n  margin-bottom: -50px;\n  display: flex;\n  padding: 15px 30px;\n  color: #333;\n  &:link {\n    text-decoration: none;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding: 30px 15px;\n  display: flex;\n  flex-direction: column;\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const SectionContent = styled.section`\n  line-height: 1.8;\n  height: 140px;\n  padding: 10px 40px;\n  display: flex;\n  flex-direction: column;\n  border-left: 1px solid #ccc;\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n","import { Link } from '@mui/material';\nimport { ContactFormDisabled } from 'components/ContactForm/ContactForm';\nimport { useNavigate } from 'react-router-dom/dist';\nimport { Container } from 'utils/Container';\nimport { Section, SectionContent } from 'utils/Section';\n\nconst HomePage = () => {\n  const navigate = useNavigate();\n\n  const handleNavigateToRegister = () => {\n    navigate('/register');\n  };\n\n  return (\n    <Container>\n      <Section>\n        <ContactFormDisabled />\n      </Section>\n      <SectionContent>\n        <p>\n          With our app, you can conveniently and reliably store your phone\n          contacts and access them from anywhere in the world at your favorite\n          time. A handy movie will quickly and easily help you find the right\n          contact, and our disability system will help you prevent accidental\n          duplicate contacts. Store important people in two clicks.{' '}\n          <Link\n            onClick={handleNavigateToRegister}\n            href=\"#\"\n            style={{ textDecoration: 'none', color: '#dd7f0c' }}\n          >\n            Register\n          </Link>{' '}\n          now and experience all the benefits of our app:)\n        </p>\n      </SectionContent>\n    </Container>\n  );\n};\n\nexport default HomePage;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items.contacts;\n\nexport const selectIsLoading = state => state.contacts.items.isLoading;\n\nexport const selectError = state => state.contacts.items.error;\n\nexport const selectFilterValue = state => state.contacts.filter;\n\nexport const selectFiltredContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filter) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n"],"names":["FormStyled","styled","Label","Input","Button","ContactForm","useState","name","setName","number","setNumber","contacts","useSelector","selectContacts","dispatch","useDispatch","isSnackOpen","setIsSnackOpen","handleInputChange","e","currentTarget","value","Error","Snack","isOpen","handleClose","text","type","onSubmit","preventDefault","contactName","lowercaseName","toLowerCase","find","includes","isContactInList","alert","contactItem","addContact","pattern","title","required","onChange","placeholder","autoComplete","ContactFormDisabled","disabled","position","vertical","horizontal","open","onClose","autoHideDuration","anchorOrigin","severity","Container","Section","SectionContent","navigate","useNavigate","Link","onClick","href","style","textDecoration","color","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","state","items","selectIsLoading","isLoading","selectError","error","selectFilterValue","filter","selectFiltredContacts","contact"],"sourceRoot":""}